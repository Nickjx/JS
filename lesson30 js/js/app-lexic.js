// токени, роздільники, коментарі
// регістрозалежність Age, age
// Massage massage MASSAGES - 3 різні назви

// ідентифікатори ОДНООБРАЗНІ
// myBag

// пропуски інгоруються

// 1 - КОМЕНТАРІ

// коментарі - це текст написаний після 2-ох слешів
// можливість коментування коментарів
/*var test = 5; //коментар */

// 2- РОЗДІЛЬНИКИ

// пробіл, табуляція, enter, символи для розділювання виразів ( ; () {} [] , )

// a = 3; //можна не додавати ;
// b = 3; //можна не додавати ;

// a = 4; b = 7 //Обов'язково додавати ;

// let a;
// a = 3;
// console.log(a);//варіант 1
// let a;a=3;console.log(a); //однакове значення як і в варіанті 1

// let a=b=x=y=f=0
// y = x + f //обов'язково ;
// (a + b).toString();

// let x = 0
// ;[x,2,4].forEach((el)=>{
//     console.log(el)
// })

// let x = 0;
// [x, 2, 4].length;

//Виключення : return, throw, continue, yield (enter після цих операторів завжди вважається як ;)
//виключення 2: ++ -- постфіксний варіант не можна відривати від виразу
// let test = 10;
// test = test + 1 == test; //11
// console.log(test);

// test++; //11

// test ++; // не можна ставити пропуск (відривати від виразу)

// ВИКЛЮЧЕННЯ 3 не можна відривати стрілку від параметрів
// ()=>{} //коректний запис
// (params)
// =>{}   //не коректний запис (не можна відривати стрілку від параметрів)

// 3- ІДЕНТИФІКАТОРИ (складаються з: літер, цифр, _, $, НЕ можуть починатись з цифри)

// my_Var
// count$
// total_sum
// x_coords
// x_coords12

// 123variables //не спрацює цифра на початку
// my-variant // не спрацює дефіс у середині ідентифікатора
// my.functi //  не спрацює крапка в середині ідентифікатора
// 1function() // не може бути число в початку імені змінної
// const // не може працювати тому що const зарезервоване слово

// 4 - ВБУДОВАНІ ІДЕНТИФІКАТОРИ
// let
// var
// const
// forEach
// if
// while
// continue
// return
// yield
// break
// typeof
// function

// 5 - ЛІТЕРАЛИ
// 12 // ЧИСЛОВИЙ ЛІТЕРАЛ (АБО ЧИСЛО)
// 1.2 // ЧИСЛОВИЙ ЛІТЕРАЛ (АБО ЧИСЛО)
// "12" //РЯДКОВИЙ ЛІТЕРАЛ (або РЯДОК)
// 'текст3833838' //РЯДКОВИЙ ЛІТЕРАЛ (або РЯДОК)
// `template string` //РЯДКОВИЙ ЛІТЕРАЛ (або РЯДОК),особливий!
// true //булевий літерал
// false //булевий літерал
// {} //об'єктний лтерал або пустий об'єкт
// [] //літерал типу масив або пустий об'єкт
// null //відсутність об'єкту


// 6 - ОПЕРАТОРИ
//+ додавання (+)
//- віднімання (-)
//* множення (*)
//&& || ! логічні оператори
// == === < > //оператори порівняння
// 7 - КЕРУЮЧІ ПОСЛІДОВНОСТІ
// ----------------------
// ----------------------
// ----------------------


